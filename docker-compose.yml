# Réseau partagé pour tous les services
networks:
  clea-network:
    name: clea-network

services:
  # Base de données PostgreSQL avec pgvector
  db:
    image: pgvector/pgvector:pg15
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-vectordb}
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=fr-FR"
    volumes:
      - vectordb_data:/var/lib/postgresql/data
      - ./clea-api/docker/init-db:/docker-entrypoint-initdb.d:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - clea-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-vectordb} && psql -U ${DB_USER:-postgres} -d ${DB_NAME:-vectordb} -c \"SELECT COUNT(*) FROM pg_extension WHERE extname = 'vector';\" | grep -q 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # API Backend - clea-api
  api:
    build:
      context: ./clea-api
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: clea-api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./clea-api/.env
    # configurations GPU ici
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - DB_HOST=db
      - PYTHONUNBUFFERED=1
      - API_HOST=0.0.0.0
      - API_PORT=8080
    ports:
      - "${API_PORT:-8080}:8080"
      
    volumes:
      - ./clea-api/models:/app/models:ro
      - ./clea-api/pyproject.toml:/app/pyproject.toml:ro
    networks:
      - clea-network
    restart: unless-stopped
    healthcheck:
        test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 60s

  # Frontend - clea-webui
  webui:
    build:
      context: ./clea-webui
      dockerfile: Dockerfile
    container_name: clea-webui
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "${UI_PORT:-3000}:3000"
    volumes:
      - ./clea-webui/src:/app/src
      - ./clea-webui/static:/app/static
    environment:
      - PUBLIC_API_URL=http://api:8080
      # Add these lines
      - NODE_ENV=production
      - ORIGIN=http://localhost:${UI_PORT:-3000}
    networks:
      - clea-network
    restart: unless-stopped

  # Service nginx pour servir le frontend (optionnel)
  nginx:
    image: nginx:alpine
    container_name: clea-nginx
    depends_on:
      - webui
      - api
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./clea-webui/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - clea-network
    restart: unless-stopped

# Volumes persistants
volumes:
  vectordb_data:
    name: clea_vectordb_data